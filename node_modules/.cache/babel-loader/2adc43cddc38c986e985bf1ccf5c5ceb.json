{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\axn6924\\\\Documents\\\\WeatherApp\\\\Weather-app\\\\src\\\\components\\\\WeatherLocation\\\\WeatherData\\\\WeatherTemperature.js\";\nimport React from 'react';\nimport WeatherIncons from 'react-weathericons';\nimport PropTypes from 'prop-types';\nimport './styles.css';\nconst icons = {\n  cloud: \"cloud\",\n  cloudy: \"cloudy\",\n  sun: \"day-sunny\",\n  rain: \"rain\",\n  snow: \"snow\",\n  fog: \"day-fog\"\n};\n\nconst getWeatherIcon = weatherState => {\n  const icon = icons[weatherState];\n  const sizeIcon = \"4x\";\n  if (icon) return React.createElement(WeatherIncons, {\n    className: \"wicon\",\n    name: icon,\n    size: sizeIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  });else return React.createElement(WeatherIncons, {\n    className: \"wicon\",\n    name: 'day-sunny',\n    size: sizeIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  });\n};\n\nconst WeatherTemperature = ({\n  temperature,\n  weatherState\n}) => React.createElement(\"div\", {\n  className: \"weatherTemperatureCont\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, getWeatherIcon(weatherState), React.createElement(\"span\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, temperature + \"°C\"));\n\nWeatherTemperature.propTypes = {\n  temperature: PropTypes.number.isRequired,\n  weatherState: PropTypes.string.isRequired\n};\nexport default WeatherTemperature;","map":{"version":3,"sources":["C:\\Users\\axn6924\\Documents\\WeatherApp\\Weather-app\\src\\components\\WeatherLocation\\WeatherData\\WeatherTemperature.js"],"names":["React","WeatherIncons","PropTypes","icons","cloud","cloudy","sun","rain","snow","fog","getWeatherIcon","weatherState","icon","sizeIcon","WeatherTemperature","temperature","propTypes","number","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,cAAP;AAEA,MAAMC,KAAK,GAAG;AACVC,EAAAA,KAAK,EAAE,OADG;AAEVC,EAAAA,MAAM,EAAE,QAFE;AAGVC,EAAAA,GAAG,EAAE,WAHK;AAIVC,EAAAA,IAAI,EAAE,MAJI;AAKVC,EAAAA,IAAI,EAAE,MALI;AAMVC,EAAAA,GAAG,EAAE;AANK,CAAd;;AASA,MAAMC,cAAc,GAAIC,YAAY,IAAI;AACpC,QAAMC,IAAI,GAAGT,KAAK,CAACQ,YAAD,CAAlB;AAEA,QAAME,QAAQ,GAAE,IAAhB;AACA,MAAID,IAAJ,EACA,OAAO,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAC,OAAzB;AAAiC,IAAA,IAAI,EAAEA,IAAvC;AAA6C,IAAA,IAAI,EAAEC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,CADA,KAGA,OAAO,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAC,OAAzB;AAAiC,IAAA,IAAI,EAAE,WAAvC;AAAoD,IAAA,IAAI,EAAEA,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CARD;;AAUA,MAAMC,kBAAkB,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAcJ,EAAAA;AAAd,CAAD,KACvB;AAAK,EAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEQD,cAAc,CAACC,YAAD,CAFtB,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACMI,WAAW,GAAG,IADpB,CAJJ,CADJ;;AAYAD,kBAAkB,CAACE,SAAnB,GAA+B;AAE3BD,EAAAA,WAAW,EAAEb,SAAS,CAACe,MAAV,CAAiBC,UAFH;AAG3BP,EAAAA,YAAY,EAAET,SAAS,CAACiB,MAAV,CAAiBD;AAHJ,CAA/B;AAMA,eAAeJ,kBAAf","sourcesContent":["import React from 'react';\r\nimport WeatherIncons from 'react-weathericons';\r\nimport PropTypes from 'prop-types';\r\nimport './styles.css';\r\n\r\nconst icons = {\r\n    cloud: \"cloud\",\r\n    cloudy: \"cloudy\",\r\n    sun: \"day-sunny\",\r\n    rain: \"rain\",\r\n    snow: \"snow\",\r\n    fog: \"day-fog\",\r\n\r\n}\r\nconst getWeatherIcon =  weatherState => {\r\n    const icon = icons[weatherState];\r\n\r\n    const sizeIcon =\"4x\";\r\n    if (icon)\r\n    return <WeatherIncons className=\"wicon\" name={icon} size={sizeIcon} />;\r\n    else\r\n    return <WeatherIncons className=\"wicon\" name={'day-sunny'} size={sizeIcon} />;\r\n}\r\n\r\nconst WeatherTemperature = ({temperature, weatherState}) => (\r\n    <div className=\"weatherTemperatureCont\">\r\n        {\r\n            getWeatherIcon(weatherState)\r\n        }\r\n        <span>\r\n             {temperature + \"°C\"}\r\n            </span>\r\n        </div>\r\n\r\n);\r\n\r\nWeatherTemperature.propTypes = {\r\n\r\n    temperature: PropTypes.number.isRequired, \r\n    weatherState: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default WeatherTemperature;"]},"metadata":{},"sourceType":"module"}